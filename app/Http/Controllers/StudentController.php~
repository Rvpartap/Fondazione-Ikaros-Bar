<?php

namespace App\Http\Controllers;
use App\User;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Hash;

class StudentController extends Controller
{
	
	public function __construct()
    {
    	  #cambiamo da guest a auth per non permettere la registrazione a chi non Ã¨ loggato
        #$this->middleware('guest');
        $this->middleware('auth');
        $this->middleware('role');
    }
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
       $student = User::all()->where('role_id', '=', '0');
       
        #$student = User::sortable();
        return view('index', compact('student'));
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return view('create');
        #return redirect('register');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        $storeData = $request->validate([
            'name' => 'required|max:255',
            'email' => 'required|max:255',
            'password' => 'required|max:255',
            'classe' => 'required|max:255',
        ]);
        #krypt password
        array_walk($storeData, function (&$value, $key) {
            if($key == 'password'){ 
                  $value = Hash::make($value); 
            }
    });
              
        $student = User::create($storeData);
        return redirect('/students')->with('completed', 'User has been saved!');
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        $student = User::findOrFail($id);
        return view('edit', compact('student'));
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
        $updateData = $request->validate([
            'name' => 'required|max:255',
            'email' => 'required|max:255',
            'password' => 'required|max:255',
            'classe' => 'required|max:255',
        ]);
        #krypt password
        array_walk($updateData, function (&$value, $key) {
            if($key == 'password'){ 
                  $value = Hash::make($value); 
            }
        });
        
        User::whereId($id)->update($updateData);
        return redirect('/students')->with('completed', 'User has been updated!');
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        $student = User::findOrFail($id);
        $student->delete();
        return redirect('/students')->with('completed', 'User has been deleted!');
    }
}