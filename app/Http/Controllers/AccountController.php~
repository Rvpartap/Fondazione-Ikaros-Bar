<?php

namespace App\Http\Controllers;

use Auth;
use App\User;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Hash;

class AccountController extends Controller
{
	
	 public function __construct()
    {
    	  #cambiamo da guest a auth per non permettere la registrazione a chi non Ã¨ loggato
        #$this->middleware('guest');
        $this->middleware('auth');
    }
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
       $users = User::all()->where('role_id', '=', '0');
       
        #$users = User::sortable();
        return view('account', compact('user'));
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
       //
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
       //
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit()
	 {
    	  $user = auth()->user();
    	  return view('users.edit', compact('user'));
	 }


    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request)
    {
        $user = auth()->user();
        $this->validate($request, [        
        		'name' => 'required|max:255',        
        		'email' => 'required|max:255',        
        		'password' => 'required|confirmed|max:255',        
        		'classe' => 'required|max:255',    
        ]);

    		$user->update([
        		'name' => $request->name,
        		'email' => $request->email,
        		'password' => bcrypt($request->password),
        		'classe' => $request->classe,
    		]);

    		return back()->with('completed', 'Account aggiornato con successo!');
    }


    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        //
    }
}